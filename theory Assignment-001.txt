Theory -
● What is Emmet?
● Difference between a Library and Framework?
● What is CDN? Why do we use it?
● Why is React known as React?
● What is crossorigin in script tag?
● What is diference between React and ReactDOM
● What is difference between react.development.js and react.production.js files via CDN?
● What is async and defer? - see my Youtube video ;)

1. What is Emmet?
Ans:
Emmet is tool for programmers which converts the abbrevations into full code. it is used to increase productivity of the programmer.
 Emmet is commonly used with HTML, XML and CSS but it's use is not limited to these languages only. 
 it can be used with other programming languages too. Steps to configure the Emmet in your VSCode.

2. Difference between a Library and Framework?
Ans:

The main distinction between a framework and a library is that a framework inverts program control. 
It informs the developer of what they require. A library, however, does not. Instead, a programmer calls the library when and where he needs it.

3. What is CDN? Why do we use it?
Ans
A CDN, or content delivery network, is a network or collection of servers in locations all over the world.
A CDN’s network of servers allows companies to deliver content from their websites and mobile applications to
 people more quickly and efficiently, based on their geographic location. In short, a CDN moves data and applications 
 closer to the end user — increasing speed, enhancing security, and improving the user experience. 
 There are many benefits of a content delivery network, from improved user experience to increased security to lower costs.benefits
 1-Reduced page load time. 
 2-Improved availability. 
 3-Increased scalability. 
 4-Increased security.
 
 4. Why is React known as React?
 Ans:
 React is known as React because of its behaviour. It is designed to act or change the user interface on the basis of user's action.
 
 5.  What is crossorigin in script tag?
 Ans:
 The purpose of crossorigin attributes is used to share the resources from one domain to another domain. Basically, it is used to handle the CORS request. It is used to handle the CORS request that checks whether it is safe to allow for sharing the resources from other domains. The resources may include Audio, Video, Images, Link or external script that specifies whether to support a cross-origin request or not.
CORS: It stands for cross-origin resource sharing. It is a mechanism by which one webpage requests to another domain for fetching out the resource like audio, video, script, etc. from the third party server without leaking their credentials information. 
Values: This attribute contains two values which are given below –
anonymous: It has a default value. It defines a CORS request which will be sent without passing the credential information.
use-credentials: A cross-origin request will be sent with credentials, cookies, and certificate.

6. What is diference between React and ReactDOM
Ans:
 React library is responsible for creating views and ReactDOM library is responsible to actually render UI in the browser
 
7. What is difference between react.development.js and react.production.js files via CDN?
Ans:
 react.development.js is used for react development and its consoles are open, we can actually debug in main core files, 
 whereas the production file contains minified version and it is not possible to debug the main file.
 
8. What is async and defer?
Ans:
async and defer are the keyword which are used inside script tag along with src, these are used to load external script efficiently to our web pages.
Note: 
When we load web pages two things happen:
    a) html parsing.
    b) loading of script.
Loading of script happen in 2 ways :
    a) fetching script from network
    b) execution of script 
e.g :
<script src ="abc.js"></script>
By default, the js engine starts Html parsing but once the script tag encounters it pauses Html parsing, starts fetching script from the network
 and once network fetch is completed, it pauses the Html parsing and starts executing the script, and once the script execution is completed then 
 only it starts remaining Html parsing.

<script async src ="abc.js"><script>
In this case by default the js engine starts Html parsing and fetching of the script from network parallelly, once fetching is completed then it 
pauses Html parsing, and starts executing the script, and at the end, once the execution of script is completed then it will start remaining html 
parsing.

<script defer src ="abc.js"></script>
In this case also by default, the js engine starts Html parsing and fetching the script from the network parallelly but 
it continoues html parsing and script will execute once parsing is completed.